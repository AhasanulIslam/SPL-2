// <auto-generated />
using System;
using JWTApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200701213723_newHallMirgation")]
    partial class newHallMirgation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("JWTApi.Models.Invertory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("InventoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Invertories");
                });

            modelBuilder.Entity("JWTApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JWTApi.Models.Room", b =>
                {
                    b.Property<int>("Room_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Building")
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Room_Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("JWTApi.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Access_Level")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("JWTApi.Models.Student", b =>
                {
                    b.Property<string>("Registration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Room_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Session")
                        .HasColumnType("INTEGER");

                    b.HasKey("Registration");

                    b.HasIndex("Room_Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("JWTApi.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("Credit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Debit")
                        .HasColumnType("INTEGER");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("JWTApi.Models.User", b =>
                {
                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contrct")
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Registration")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("Registration");

                    b.HasIndex("TransactionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JWTApi.Models.Usertype", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dasignation")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Usertypes");
                });

            modelBuilder.Entity("JWTApi.Models.Values", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("JWTApi.Models.Invertory", b =>
                {
                    b.HasOne("JWTApi.Models.Product", "Product")
                        .WithMany("Invertory")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("JWTApi.Models.Student", b =>
                {
                    b.HasOne("JWTApi.Models.Room", "Room")
                        .WithMany("Student")
                        .HasForeignKey("Room_Id");
                });

            modelBuilder.Entity("JWTApi.Models.User", b =>
                {
                    b.HasOne("JWTApi.Models.Invertory", "Invertory")
                        .WithMany("User")
                        .HasForeignKey("InventoryId");

                    b.HasOne("JWTApi.Models.Student", "Student")
                        .WithMany("User")
                        .HasForeignKey("Registration");

                    b.HasOne("JWTApi.Models.Transaction", "Transaction")
                        .WithMany("User")
                        .HasForeignKey("TransactionId");

                    b.HasOne("JWTApi.Models.Usertype", "Usertype")
                        .WithMany("User")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
